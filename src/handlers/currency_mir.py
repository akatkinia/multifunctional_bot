from aiogram import types
from aiogram.dispatcher import FSMContext

from keyboards.common import cb
from keyboards.currency_mir import mir_currency_ikb
from modules.currency_mir import get_valutes_mir, get_currencies_mir, get_course_today_mir, get_course_on_date_mir, draw_currency_chart_mir
from states.common import ProfileStatesGroup
import io


# –°–ø—Ä–∞–≤–∫–∞ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç –¥–ª—è –ú–ò–†
async def currency_help_mir(callback: types.CallbackQuery, callback_data: dict, state: FSMContext):
    popup_text = "–ú–∏–Ω—É—Ç–∫—É, —Å–æ–±–∏—Ä–∞—é –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
    await callback.answer(text=popup_text)
    await callback.message.answer(text=get_valutes_mir(get_currencies_mir()), reply_markup=mir_currency_ikb(), parse_mode='html')

# Callback handler –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ –ø—É–Ω–∫—Ç –º–µ–Ω—é "–ö—É—Ä—Å –∑–∞ —Å–µ–≥–æ–¥–Ω—è"
async def cb_today_currency_mir(callback: types.CallbackQuery, callback_data: dict, state: FSMContext):
    text = """<b>–ö—É—Ä—Å –∑–∞ —Å–µ–≥–æ–¥–Ω—è.</b>

–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, <code>–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∏–π —Ç–µ–Ω–≥–µ</code>). 
–ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ—á–µ–Ω—å –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –≤–∞–ª—é—Ç –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ —Å–ø—Ä–∞–≤–∫–µ ‚¨áÔ∏è
"""
    await ProfileStatesGroup.currency_mir_today_state.set()
    await callback.message.answer(text=text, reply_markup=mir_currency_ikb(), parse_mode='html')

# Message handler - –ø—É–Ω–∫—Ç –º–µ–Ω—é "–ö—É—Ä—Å –∑–∞ —Å–µ–≥–æ–¥–Ω—è"
async def today_currency_mir(message: types.Message):
    popup_text = "–ú–∏–Ω—É—Ç–∫—É, —Å–æ–±–∏—Ä–∞—é –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç..."
    await message.answer(text=popup_text)
    await message.answer(text=get_course_today_mir(main=get_currencies_mir(), valute=message.text), reply_markup=mir_currency_ikb(), parse_mode='html')

# Callback handler –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ –ø—É–Ω–∫—Ç –º–µ–Ω—é "–ö—É—Ä—Å –∑–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –¥–∞—Ç—É"
async def cb_currentdate_currency_mir(callback: types.CallbackQuery, callback_data: dict, state: FSMContext):
    text = """<b>–ö—É—Ä—Å –∑–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –¥–∞—Ç—É.</b>

–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã –∏ –¥–∞—Ç—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, <code>–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∏–π —Ç–µ–Ω–≥–µ 05.07.2023</code>). 
–ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ—á–µ–Ω—å –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –≤–∞–ª—é—Ç –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ —Å–ø—Ä–∞–≤–∫–µ ‚¨áÔ∏è
"""
    await ProfileStatesGroup.currency_mir_currentdate_state.set()
    await callback.message.answer(text=text, reply_markup=mir_currency_ikb(), parse_mode='html')

# Message handler - –ø—É–Ω–∫—Ç –º–µ–Ω—é "–ö—É—Ä—Å –∑–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –¥–∞—Ç—É"
async def currentdate_currency_mir(message: types.Message):
    popup_text = "–ú–∏–Ω—É—Ç–∫—É, —Å–æ–±–∏—Ä–∞—é –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç..."
    
    text_parts = message.text.split()
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Ç–µ–∫—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Å—Ç–∞–≤–ª—è—é—â–∏—Ö (valute –∏ date)
    if len(text_parts) == 3:
        # Valute –∏ date –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        valute = ' '.join(text_parts[:2])
        date = text_parts[-1]
        
        await message.answer(text=popup_text)
        await message.answer(text=get_course_on_date_mir(main=get_currencies_mir(), valute=valute, date=date), reply_markup=mir_currency_ikb(), parse_mode='html')
    else:
        wrong_text = """<b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ. –ü—Ä–æ—Å—å–±–∞ —Å–æ–±–ª—é–¥–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç.</b>

–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã –∏ –¥–∞—Ç—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, <code>–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∏–π —Ç–µ–Ω–≥–µ 05.07.2023</code>). 
–ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ—á–µ–Ω—å –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –≤–∞–ª—é—Ç –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ —Å–ø—Ä–∞–≤–∫–µ ‚¨áÔ∏è
"""
        await message.answer(text=wrong_text, reply_markup=mir_currency_ikb(), parse_mode='html')

# Callback handler –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ –ø—É–Ω–∫—Ç –º–µ–Ω—é "–ì—Ä–∞—Ñ–∏–∫ –∑–∞ –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç"
async def cb_chart_mir(callback: types.CallbackQuery, callback_data: dict, state: FSMContext):
    text = """<b>–ì—Ä–∞—Ñ–∏–∫ –∑–∞ –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç.</b>

–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã –∏ –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, <code>–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∏–π —Ç–µ–Ω–≥–µ 20.06.2023 05.07.2023</code>). 
–ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ—á–µ–Ω—å –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –≤–∞–ª—é—Ç –∏ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–∞—Ç –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ —Å–ø—Ä–∞–≤–∫–µ ‚¨áÔ∏è
"""
    await ProfileStatesGroup.currency_mir_chart_state.set()
    await callback.message.answer(text=text, reply_markup=mir_currency_ikb(), parse_mode='html')

# Message handler - –ø—É–Ω–∫—Ç –º–µ–Ω—é "–ì—Ä–∞—Ñ–∏–∫ –∑–∞ –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç"
async def chart_mir(message: types.Message):
    popup_text = "–ú–∏–Ω—É—Ç–∫—É, —Å–æ–±–∏—Ä–∞—é –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç..."
    await message.answer(text=popup_text)

    try:
        main = get_currencies_mir()
        
        text_parts = message.text.split()
        valute = ' '.join(text_parts[:2])
        start_date = text_parts[-2]
        end_date = text_parts[-1]

        fig1_bytes, fig2_bytes = draw_currency_chart_mir(main=main, valute=valute, start_date=start_date, end_date=end_date)

        if fig1_bytes and fig2_bytes:
            fig1_io = io.BytesIO(fig1_bytes)
            fig2_io = io.BytesIO(fig2_bytes)

            fig1_photo = types.InputFile(fig1_io, filename='chart1.png')
            fig2_photo = types.InputFile(fig2_io, filename='chart2.png')

            await message.answer_photo(fig1_photo, caption=f"–ì—Ä–∞—Ñ–∏–∫ 1 - –ö—É—Ä—Å —Ä—É–±–ª—è –∫ {valute}")
            await message.answer_photo(fig2_photo, caption=f"–ì—Ä–∞—Ñ–∏–∫ 2 - –ö—É—Ä—Å {valute} –∫ —Ä—É–±–ª—é")
            await message.answer(text="<b>–ö—É—Ä—Å—ã –ú–ò–†</b> üåç", parse_mode="HTML", reply_markup=mir_currency_ikb())

        else:
            error_message = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞."
            await message.answer(text=error_message)
    except Exception:
        await message.answer(
            text=(
                '<b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ. –ü—Ä–æ—Å—å–±–∞ —Å–æ–±–ª—é–¥–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç.</b>'
                '\n\n'
                '–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã –∏ –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç'
                '(–Ω–∞–ø—Ä–∏–º–µ—Ä, <code>–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∏–π —Ç–µ–Ω–≥–µ 20.06.2023 05.07.2023</code>).'
                '\n'
                '–ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ—á–µ–Ω—å –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –≤–∞–ª—é—Ç –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ —Å–ø—Ä–∞–≤–∫–µ ‚¨áÔ∏è'
            ),
            reply_markup=mir_currency_ikb(),
            parse_mode='html',
        )


# –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í
def register_handlers_currency_mir(dp):
    # –°–ø—Ä–∞–≤–∫–∞
    dp.register_callback_query_handler(currency_help_mir, cb.filter(command='cb_currency_help_mir'), state='*')

    # –ö—É—Ä—Å –∑–∞ —Å–µ–≥–æ–¥–Ω—è
    dp.register_callback_query_handler(cb_today_currency_mir, cb.filter(command='cb_today_currency_mir'), state='*')
    dp.register_message_handler(today_currency_mir, state=ProfileStatesGroup.currency_mir_today_state)

    # –ö—É—Ä—Å –∑–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –¥–∞—Ç—É
    dp.register_callback_query_handler(cb_currentdate_currency_mir, cb.filter(command='cb_currentdate_currency_mir'), state='*')
    dp.register_message_handler(currentdate_currency_mir, state=ProfileStatesGroup.currency_mir_currentdate_state)

    # –ì—Ä–∞—Ñ–∏–∫ –∑–∞ –¥–∏–∞–ø–∞–∑–æ–Ω
    dp.register_callback_query_handler(cb_chart_mir, cb.filter(command='cb_chart_mir'), state='*')
    dp.register_message_handler(chart_mir, state=ProfileStatesGroup.currency_mir_chart_state)
